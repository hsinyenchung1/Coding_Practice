513. Find Bottom Left Tree Value
Given a binary tree, find the leftmost value in the last row of the tree.

Example 1:
Input:

    2
   / \
  1   3

Output:
1

Example 2: 
Input:

        1
       / \
      2   3
     /   / \
    4   5   6
       /
      7

Output:
7

BFS
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        if(root == null){
            return 0;
        }
        
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.add(root);
        int result = 0;
        while(!q.isEmpty()){
            int size = q.size();
            for(int i = 0; i < size; i++){
                TreeNode current = q.poll();
                if(i == 0){
                    result = current.val;
                }
                
                if(current.left != null){
                    q.add(current.left);
                }
                if(current.right != null){
                    q.add(current.right);
                }
            }
        }
        
        return result;
    }
}

DFS
class Solution {
	private result = 0;
	private height = 0;
    public int findBottomLeftValue(TreeNode root) {
       helper(root, 1);
       return result;
    }

    public void helper(TreeNode root, int depth){
    	if(height<depth){
    		height = depth;
    		result = root.val;
    	}

    	if(root.left != null) {
    		helper(root.left, depth + 1);
    	}
    	if(root.right != null) {
    		helper(root.right, depth + 1);
    	}
    	
    }
}

time: O(n)
space: O(n)